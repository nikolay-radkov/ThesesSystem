@using ThesesSystem.Web.Infrastructure.Constants
@using Microsoft.AspNet.Identity
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - @GlobalConstants.APPLICATION_NAME</title>
    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/toastr")
    @Scripts.Render("~/bundles/jquery")
    @RenderSection("styles", required: false)
    @Styles.Render("~/Content/custom")
</head>
<body>
    <div class="navbar navbar-default navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="#">
                    <img alt="Brand" src="~/Icon.png">
                </a>
            </div>
            <div class="navbar-collapse collapse">
                @if (User.Identity.IsAuthenticated)
                {
                    <ul class="nav navbar-nav">
                        <li>@Html.ActionLink("Архив", "Index", "Storage", new { area = string.Empty }, new { @class = string.Empty })</li>
                        <li>@Html.ActionLink("Разработка", "Index", "Thesis", new { area = string.Empty }, new { @class = string.Empty })</li>
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Идеи<span class="caret"></span></a>
                            <ul class="dropdown-menu" role="menu">
                                <li>
                                    @Html.ActionLink("Теми", "Themes", "Idea", routeValues: new { area = string.Empty }, htmlAttributes: new { title = "Теми" })
                                </li>
                                <li>
                                    @Html.ActionLink("Генератор", "Generator", "Idea", routeValues: new { area = string.Empty }, htmlAttributes: new { title = "Генератор" })
                                </li>
                            </ul>
                        </li>

                        <li>@Html.ActionLink("Наръчници", "Index", "Tutorial", new { area = string.Empty }, new { @class = string.Empty })</li>
                        @Html.Partial("_AdministrationDropdownPartial")
                    </ul>

                    @Html.Partial("_SearchPartial", new ThesesSystem.Web.ViewModels.Search.SearchViewModel())
                }

                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div id="wrapper" class="body-content">
        <div class="container">
            @RenderBody()
            <a href="@Url.Action("Index","Feedback", new { area = string.Empty })">
                <img id="feedback" src="~/Images/feedback.png" alt="Feedback" />
            </a>
            <hr />
        </div>
        <footer>
            <div id="black-footer">
                <div class="container">
                    <div class="row">
                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-3">
                            @if (User.Identity.IsAuthenticated)
                            {  <h4 class="line3 center standart-h4title"><span>Навигация</span></h4>
                                <ul class="footer-links">
                                    <li>@Html.ActionLink("Архив", "Index", "Storage", new { area = string.Empty }, new { @class = string.Empty })</li>
                                    <li>@Html.ActionLink("Разработка", "Index", "Thesis", new { area = string.Empty }, new { @class = string.Empty })</li>
                                    <li>
                                        @Html.ActionLink("Теми", "Themes", "Idea", routeValues: new { area = string.Empty }, htmlAttributes: new { title = "Теми" })
                                    </li>
                                    <li>
                                        @Html.ActionLink("Генератор", "Generator", "Idea", routeValues: new { area = string.Empty }, htmlAttributes: new { title = "Генератор" })
                                    </li>
                                    <li>@Html.ActionLink("Наръчници", "Index", "Tutorial", new { area = string.Empty }, new { @class = string.Empty })</li>
                                </ul>
                            }
                        </div>

                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-3">
                            <h4 class="line3 center standart-h4title"><span>Полезни връзки</span></h4>
                            <ul class="footer-links">
                                <li><a href="https://github.com/nikolay-radkov/ThesesSystem">Сорс код на системата</a></li>
                                <li><a href="http://tu-sofia.bg" />ТУ-София</a></li>
                                <li><a href="http://www.asp.net/mvc">ASP.NET MVC</a></li>
                                <li><a href="http://getbootstrap.com/">Twitter Bootstrap</a></li>
                            </ul>
                        </div>

                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-3">
                            <h4 class="line3 center standart-h4title"><span>Генератори на идеи</span></h4>
                            <ul class="footer-links">
                                <li><a href="http://ideagenerator.creativitygames.net/">Creativity Games</a></li>
                                <li><a href="http://www.portent.com/tools/title-maker">Portent</a></li>

                            </ul>
                        </div>

                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-3">
                            <h4 class="line3 center standart-h4title"><span>Контакти</span></h4>
                            <address>
                            </address>
                        </div>
                    </div>
                </div>
                <br />
                <div class="container">
                    <div class="row">
                        <div class="col-sm-12 col-lg-12 text-center">
                            <p>
                                © @DateTime.Now.Year създаден с помощта на  <a href="http://www.asp.net/mvc">ASP.NET MVC</a> и <a href="http://getbootstrap.com/">Twitter Bootstrap</a>.
                                <br /><small>Сайтът е разработен от <a href="https://github.com/nikolay-radkov">Николай Радков</a></small>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>

    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/unobtrusive")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/mustache")
    @Scripts.Render("~/bundles/signalr")
    @Scripts.Render("~/bundles/toastr")
    <script src="/signalr/hubs"></script>
    @RenderSection("scripts", required: false)
    <script id="template-history" type="x-tmpl-mustache">
        {{#notifications}}
        <li class="notification-tab">
            {{#IsSeen}}
            <span data-url='{{ForwardUrl}}' data-id='{{Id}}'>{{Text}}</span>
            {{/IsSeen}}
            {{^IsSeen}}
            <span class="new-message" data-url='{{ForwardUrl}}' data-id='{{Id}}'>{{Text}}</span>
            {{/IsSeen}}

        </li>
        {{/notifications}}
    </script>
    <script id="template-notification" type="x-tmpl-mustache">
        <li class="notification-tab">
            <span class="new-message" data-url='{{ForwardUrl}}' data-id='{{Id}}'>{{Text}}</span>
        </li>
    </script>

    <script>
        $('#btn-search-submit').on('click', function () {
            $('#hidden-submit').click();
        });

        $('.search-options').on('click', function () {
            var display = $('.search-dropdown').css('display');

            if (display == 'none') {
                $('.search-dropdown').show('1');
            }
            else {
                $('.search-dropdown').hide('2');
            }
        });

        $(".search-group").hover(function () { },
            function () {
                $(".search-dropdown").hide('2');
            });

        $('.search-dropdown').on('click', 'li', function () {
            var icon = this.classList;
            $('#search-icon').removeClass();
            $('#search-icon').addClass('search-options');
            $('#search-icon').addClass(icon[0]);
            $('#search-icon').addClass(icon[1]);
            $('#hidden-value').val($(this).attr('data-value'));
            $('.search-dropdown').hide('2');
        });

        /*--Notification hub--*/
        var isUserComplete = '@User.IsInRole(GlobalConstants.COMPLETE_USER)';

        if (isUserComplete == 'True') {
            $(document).ready(function () {

                $.connection.hub.start().done(function () {
                    notificationHub.server.connect(userId);
                    notificationHub.server.getNotificationHistory(userId);
                });

                var notificationHub = $.connection.notificationHub;
                var userId = '@User.Identity.GetUserId()';

                notificationHub.client.addNotification = addNotification;
                notificationHub.client.showNotificationHistory = showNotificationHistory

                function onNotificationClick() {
                    var forwardUrl = $(this).attr('data-url');
                    var id = $(this).attr('data-id');

                    notificationHub.server.markAsSeenNotification(id);

                    window.location.replace(forwardUrl);
                }

                function addNotification(notification) {
                    var template = $('#template-notification').html();
                    Mustache.parse(template);

                    var rendered = Mustache.render(template, notification);
                    var $rendered = $(rendered);
                    $rendered.on('click', 'span', onNotificationClick);

                    var container = $('#notification-container');
                    var spanId = container.find('span').attr('data-id');

                    if (spanId == '0') {
                        container.html($rendered);
                    }
                    else {
                        container.prepend($rendered);
                    }

                    var notSeeCount = parseInt($('#not-seen-notification').text(), 10);

                    if (!notSeeCount) {
                        notSeeCount = 0;
                    }

                    notSeeCount++;
                    $('#not-seen-notification').text(notSeeCount);

                    function anchorFire() {
                        window.location.replace(notification.ForwardUrl);
                    }

                    toastr.options = {
                        "closeButton": true,
                        "debug": false,
                        "newestOnTop": true,
                        "progressBar": true,
                        "onclick": anchorFire,
                        "positionClass": "toast-bottom-left",
                        "preventDuplicates": false,
                        "showDuration": "300",
                        "hideDuration": "1000",
                        "timeOut": "5000",
                        "extendedTimeOut": "1000",
                        "showEasing": "swing",
                        "hideEasing": "linear",
                        "showMethod": "fadeIn",
                        "hideMethod": "fadeOut"
                    }

                    toastr["info"](notification.Text)

                }

                function showNotificationHistory(notificationHistory) {
                    if (notificationHistory.Notifications.length != 0) {
                        var notifications = { "notifications": notificationHistory.Notifications };

                        var template = $('#template-history').html();
                        Mustache.parse(template);
                        var rendered = Mustache.render(template, notifications);

                        if (notificationHistory.NotSeenNotificationsCount > 0) {
                            $('#not-seen-notification').text(notificationHistory.NotSeenNotificationsCount);
                        }

                        $('#notification-container').html(rendered);
                        $('.notification-tab').on('click', 'span', onNotificationClick);
                    }
                }
            });
        }
    </script>

</body>

</html>
